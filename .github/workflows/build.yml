name: build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      PYTHONIOENCODING: utf-8
      PYTHONOPTIMIZE: 1
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x
          check-latest: true
          cache: pip
          cache-dependency-path: requirements.txt
          
      - name: Install pip dependencies
        run: pip install -U -r requirements.txt
        
      - name: Setup UPX
        run: |
          if [ $RUNNER_OS == "Windows" ]; then
            choco install upx --no-progress
          elif [ $RUNNER_OS == "Linux" ]; then
            sudo apt install upx-ucl
          elif [ $RUNNER_OS == "macOS" ]; then
            brew install upx
          fi
          
      - name: Build executable
        run: |
          pip install pyinstaller
          pyinstaller build.spec
          
      - name: Upload result
        uses: actions/upload-artifact@v3
        with:
          name: BangumiRenamer-${{ runner.os }}
          path: dist
          
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: BangumiRenamer-Windows
          path: dist-Windows
          
      - uses: actions/download-artifact@v3
        with:
          name: BangumiRenamer-Linux
          path: dist-Linux
          
      - uses: actions/download-artifact@v3
        with:
          name: BangumiRenamer-macOS
          path: dist-macOS
          
      - name: Create release assets
        id: vars
        run: |
          REAL_ESRGAN_PLATFORM=

          mkdir release

          for BUILD_OS in "Windows" "Linux" "macOS"; do
            if [ $BUILD_OS == "Windows" ]; then
              REAL_ESRGAN_PLATFORM=windows
            elif [ $BUILD_OS == "Linux" ]; then
              REAL_ESRGAN_PLATFORM=ubuntu
            elif [ $BUILD_OS == "macOS" ]; then
              REAL_ESRGAN_PLATFORM=macos
            fi

            if [ $BUILD_OS == "Windows" ]; then
              7z a \
                ../release/BangumiRenamer_Windows.7z \
                BangumiRenamer.exe \
                -mx9 -mfb256 -md1g -ms
                
            elif [ $BUILD_OS == "Linux" ]; then
              chmod +x BangumiRenamer
              XZ_OPT=-e9 tar Jcvf \
                ../release/BangumiRenamer_Linux.tar.xz \
                ./BangumiRenamer
                
            elif [ $BUILD_OS == "macOS" ]; then
              cd ../../../
              XZ_OPT=-e9 tar Jcvf \
                ../release/BangumiRenamer_macOS_x86.tar.xz \
                BangumiRenamer.app
            fi

            cd ..
          done

          echo "release_files<<EOF" >> $GITHUB_OUTPUT
          find release -type f >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Release automated build
        uses: softprops/action-gh-release@v1
        with:
          name: 1
          tag_name: 2
          files: ${{ steps.vars.outputs.release_files }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
